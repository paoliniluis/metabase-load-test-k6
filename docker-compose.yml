services:
  metabase-load:
    image: metabase/metabase-enterprise:v1.45.4
    container_name: metabase-load
    hostname: metabase
    volumes: 
      - /dev/urandom:/dev/random:ro
    ports:
      - 3001:3000
    environment: 
      MB_DB_TYPE: postgres
      MB_DB_CONNECTION_URI: "postgres://postgres-app-db:5432/metabase?user=metabase&password=mysecretpassword&sslmode=prefer"
      MB_SITE_URL: http://localhost:3001/
      MB_APPLICATION_DB_MAX_CONNECTION_POOL_SIZE: 500
      MB_SEND_EMAIL_ON_FIRST_LOGIN_FROM_NEW_DEVICE: FALSE
      JAVA_TOOL_OPTIONS: -Xmx1488m -Xms500m
      MB_DISABLE_SESSION_THROTTLE: true
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2048M
        reservations:
          cpus: '2'
          memory: 1536M
    networks: 
      - metanet1-load
    depends_on: 
      postgres-app-db:
        condition: service_healthy
      postgres-data1:
        condition: service_healthy
    healthcheck:
      test: curl --fail -X GET -I http://localhost:3000/api/health || exit 1
      interval: 15s
      timeout: 5s
      retries: 10
  postgres-app-db:
    image: postgres:15.2-alpine
    container_name: postgres-app-db
    hostname: postgres-app-db
    ports:
      - 5432:5432
    environment:
      - "POSTGRES_USER=metabase"
      - "POSTGRES_DB=metabase"
      - "POSTGRES_PASSWORD=mysecretpassword"
    networks: 
      - metanet1-load
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2048M
        reservations:
          cpus: '2'
          memory: 1536M
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U metabase -d metabase"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: -c 'max_connections=10000'
  setup-load:
    build: setup/.
    container_name: setup-load
    volumes:
      - $PWD/setup/setup.py:/app/setup.py
    networks:
      - metanet1-load
    depends_on:
      metabase-load:
        condition: service_healthy
    command: python /app/setup.py
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 64M
        reservations:
          cpus: '0.5'
          memory: 32M
    environment:
      host: http://metabase
      port: 3000
      dbs: 1
  postgres-data1:
    image:  metabase/qa-databases:postgres-sample-15
    container_name: postgres-data1
    hostname: postgres-data1
    networks: 
      - metanet1-load
    ports:
      - 5433:5432
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1024M
        reservations:
          cpus: '1'
          memory: 512M
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U metabase -d sample"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: -c 'max_connections=10000'
  k6-load-test:
    image: grafana/k6:0.46.0
    volumes:
      - $PWD/k6-script/script.js:/home/k6/script.js
    networks:
      - metanet1-load
    environment:
      host: http://metabase:3000
      user: a@b.com
      password: metabot1
    depends_on:
      setup-load:
        condition: service_completed_successfully
    command: run /home/k6/script.js
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1024M
        reservations:
          cpus: '1'
          memory: 512M

networks: 
  metanet1-load:
    driver: bridge
